{"version":3,"sources":["locales lazy /^/.//.*//messages/.js$/ groupOptions: {} namespace object","i18n.js","helpers/LanguageSwitcher.js","helpers/InputValue.js","helpers/IntegerStepper.js","App.js","serviceWorker.js","index.js"],"names":["map","./en/messages.js","webpackAsyncContext","req","ids","__webpack_require__","e","then","id","t","Promise","resolve","Error","code","keys","Object","module","exports","locales","en","cs","i18n","setupI18n","willActivate","locale","concat","withI18n","_ref","react","selected","key","onClick","activate","value","InputValue","state","onChange","_this","setState","target","this","react_default","a","createElement","Fragment","placeholder","props","label","children","defaultValue","React","Component","IntegerStepper","type","imin","max","min","App","_lingui_react","style","padding","LanguageSwitcher","className","components","InputValue_InputValue","_","name","values","_ref2","alert","IntegerStepper_IntegerStepper","count","0","Date","1","formats","number0","currency","number1","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ff4ecc93.chunk.js","sourcesContent":["var map = {\n\t\"./en/messages.js\": [\n\t\t45,\n\t\t1\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__.t(id, 7);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 43;\nmodule.exports = webpackAsyncContext;","import { setupI18n } from \"@lingui/core\";\n\nexport const locales = {\n  en: \"English\",\n  cs: \"ÄŒesky\"\n};\nexport const defaultLocale = \"en\";\n\nfunction loadCatalog(locale) {\n  return import(/* webpackMode: \"lazy\", webpackChunkName: \"i18n-[index]\" */\n  `./locales/${locale}/messages.js`);\n}\n\nexport const i18n = setupI18n();\ni18n.willActivate(loadCatalog);\n","import * as React from \"react\";\nimport { withI18n } from \"@lingui/react\";\n\nconst Navigation = ({ i18n, locales }) => (\n  <select selected={i18n.locale}>\n    {Object.keys(locales).map(locale => (\n      <option key={locale} onClick={() => i18n.activate(locale)} value={locale}>\n        {locales[locale]}\n      </option>\n    ))}\n  </select>\n);\n\nexport default withI18n(Navigation);\n","import React from \"react\";\n\nexport default class InputValue extends React.Component {\n  state = {\n    value: \"\"\n  };\n\n  onChange = e => this.setState({ value: e.target.value });\n\n  render() {\n    const { value } = this.state;\n\n    return (\n      <React.Fragment>\n        <input\n          placeholder={this.props.label}\n          value={value}\n          onChange={this.onChange}\n        />\n        {this.props.children(value || this.props.defaultValue)}\n      </React.Fragment>\n    );\n  }\n}\n","import * as React from \"react\";\n\nexport default class IntegerStepper extends React.Component {\n  state = {\n    value: 1\n  };\n\n  onChange = e => {\n    const { value } = e.target;\n    this.setState({ value });\n  };\n\n  render() {\n    const { value } = this.state;\n\n    return (\n      <React.Fragment>\n        <input\n          type=\"range\"\n          imin={0}\n          max={20}\n          onChange={this.onChange}\n          value={value}\n        />\n        <input\n          type=\"number\"\n          min={0}\n          max={20}\n          value={value}\n          onChange={this.onChange}\n        />\n        {this.props.children(value)}\n      </React.Fragment>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { I18nProvider, I18n } from \"@lingui/react\";\nimport { Trans, t, Plural, DateFormat, NumberFormat } from \"@lingui/macro\";\nimport { i18n, defaultLocale, locales } from \"./i18n\";\nimport LanguageSwitcher from \"./helpers/LanguageSwitcher\";\nimport InputValue from \"./helpers/InputValue\";\nimport IntegerStepper from \"./helpers/IntegerStepper\";\n\ni18n.activate(defaultLocale);\n\nclass App extends Component {\n  render() {\n    return (\n      <I18nProvider i18n={i18n}>\n        <div style={{ padding: \"20px 50px\" }}>\n          <p>\n            <Trans>Select language:</Trans>{\" \"}\n            <LanguageSwitcher locales={locales} />\n          </p>\n\n          <h1>\n            <Trans>LinguiJS example</Trans>\n          </h1>\n\n          <p className=\"lead\">\n            <Trans>\n              This is an example integration of LinguiJS with React apps.\n            </Trans>\n          </p>\n\n          <h2>\n            <Trans>Message formatting</Trans>\n          </h2>\n\n          <p>\n            <Trans>\n              All messages use ICU MessageFormat, but <strong>Trans</strong>{\" \"}\n              macro generates this syntax from JSX.\n            </Trans>\n          </p>\n\n          <h3>\n            <Trans>Variables</Trans>\n          </h3>\n\n          <p>\n            <Trans>Messages can include variables:</Trans>\n          </p>\n\n          <I18n>\n            {({ i18n }) => (\n              <InputValue\n                defaultValue={i18n._(\n                  /* i18n: Default value for Hello {name} */ t`World`\n                )}\n                label={i18n._(t`Enter your name`)}\n              >\n                {name => (\n                  <p>\n                    <Trans>Hello {name}</Trans>\n                  </p>\n                )}\n              </InputValue>\n            )}\n          </I18n>\n\n          <h3>\n            <Trans>Components</Trans>\n          </h3>\n\n          <p>\n            <Trans>\n              <strong>HTML</strong> and <strong>React components</strong> works\n              without extra configuration.\n            </Trans>\n          </p>\n\n          <h3>\n            <Trans>Props and strings</Trans>\n          </h3>\n\n          <p>\n            <Trans>\n              React props and strings can be translated using{\" \"}\n              <strong>i18n</strong> core:\n            </Trans>{\" \"}\n            <I18n>\n              {({ i18n }) => (\n                <button onClick={() => alert(i18n._(t`You're looking good!`))}>\n                  <Trans>Show motto of the day</Trans>\n                </button>\n              )}\n            </I18n>\n          </p>\n\n          <h2>\n            <Trans>Formatting</Trans>\n          </h2>\n\n          <h3>\n            <Trans>Plurals</Trans>\n          </h3>\n\n          <IntegerStepper>\n            {count => (\n              <Plural\n                value={count}\n                _0=\"There're no books\"\n                one=\"There's one book\"\n                other=\"There're # books\"\n              />\n            )}\n          </IntegerStepper>\n\n          <h3>\n            <Trans>Dates</Trans>\n          </h3>\n\n          <p>\n            <Trans>\n              Today is <DateFormat value={new Date()} />\n            </Trans>\n          </p>\n\n          <h3>\n            <Trans>Numbers</Trans>\n          </h3>\n\n          <p>\n            <Trans>\n              It costs{\" \"}\n              <NumberFormat\n                value={2000}\n                format={{ style: \"currency\", currency: \"USD\" }}\n              />{\" \"}\n              which is{\" \"}\n              <NumberFormat value={0.2} format={{ style: \"percent\" }} /> of our\n              income.\n            </Trans>\n          </p>\n        </div>\n      </I18nProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}