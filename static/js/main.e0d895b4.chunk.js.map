{"version":3,"sources":["locales lazy /^/.//.*//messages/.js$/ groupOptions: {} namespace object","lang.js","I18nLoader.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["map","./en/messages.js","webpackAsyncContext","req","ids","__webpack_require__","e","then","id","t","Promise","resolve","Error","code","keys","Object","module","exports","languages","lang","indexOf","I18nLoader","_React$Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","catalogs","loadCatalog","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","language","catalog","wrap","_context","prev","next","sent","setState","objectSpread","defineProperty","stop","_x","inherits","createClass","key","value","props","nextProps","nextState","_this$props","children","react_default","createElement","_lingui_react","React","Component","console","log","process","Home","className","src","logo","alt","components","href","target","rel","NotFound","RootRedirect","match","_split","navigator","browserLanguage","split","slicedToArray","Redirect","to","I18nRoutes","_ref2","params","I18nLoader_I18nLoader","Switch","Route","path","component","exact","App","BrowserRouter","Boolean","window","location","hostname","rootElement","document","getElementById","hasChildNodes","hydrate","src_App_0","render","serviceWorker","ready","registration","unregister","p"],"mappings":"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","file":"static/js/main.e0d895b4.chunk.js","sourcesContent":["var map = {\n\t\"./en/messages.js\": [\n\t\t156,\n\t\t1\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__.t(id, 7);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 153;\nmodule.exports = webpackAsyncContext;","const languages = [\"en\", \"de\"];\nconst defaultLang = \"en\";\n\nexport default {\n  supported(lang) {\n    return languages.indexOf(lang) !== -1;\n  },\n  default: defaultLang\n};\n","import React from \"react\";\nimport { I18nProvider } from \"@lingui/react\";\n\nexport class I18nLoader extends React.Component {\n  state = {\n    catalogs: {}\n  };\n\n  loadCatalog = async language => {\n    // what if it fails?\n    const catalog = await import(/* webpackMode: \"lazy\", webpackChunkName: \"i18n-[index]\" */\n    `./locales/${language}/messages.js`);\n\n    this.setState(state => ({\n      catalogs: {\n        ...state.catalogs,\n        [language]: catalog\n      }\n    }));\n  };\n\n  componentDidMount() {\n    this.loadCatalog(this.props.language);\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const { language } = nextProps;\n    const { catalogs } = nextState;\n\n    if (language !== this.props.language && !catalogs[language]) {\n      this.loadCatalog(language);\n      return false;\n    }\n\n    return true;\n  }\n\n  render() {\n    const { children, language } = this.props;\n    const { catalogs } = this.state;\n\n    // Skip rendering when catalog isn't loaded.\n    if (!catalogs[language]) return <div>Loading...</div>;\n\n    return (\n      <I18nProvider language={language} catalogs={catalogs}>\n        {children}\n      </I18nProvider>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { Route, Switch, BrowserRouter, Redirect } from \"react-router-dom\";\nimport lang from \"./lang\";\nimport { I18nLoader } from \"./I18nLoader\";\nimport { Trans } from \"@lingui/macro\";\n\nconsole.log(process.env.REACT_APP_GIT_SHA);\n\nconst Home = () => (\n  <div className=\"App\">\n    <header className=\"App-header\">\n      <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      <p>\n        <Trans>\n          Edit <code>src/App.js</code> and save to reload.\n        </Trans>\n      </p>\n      <a\n        className=\"App-link\"\n        href=\"https://reactjs.org\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <Trans>Learn React</Trans>\n      </a>\n    </header>\n  </div>\n);\n\nconst NotFound = () => (\n  <div className=\"App\">\n    <header className=\"App-header\">\n      <p>404</p>\n    </header>\n  </div>\n);\n\nconst RootRedirect = ({ match }) => {\n  let [language] = (\n    navigator.language ||\n    // $FlowFixMe - browserLanguage is required for IE\n    navigator.browserLanguage ||\n    lang.default\n  ).split(\"-\");\n  if (!lang.supported(language)) language = lang.default;\n  return <Redirect to={`/${language}`} />;\n};\n\nconst I18nRoutes = ({ match }) => {\n  let { language } = match.params;\n\n  if (!lang.supported(language)) {\n    language = lang.default;\n    return (\n      <I18nLoader language={language}>\n        <Route component={NotFound} />\n      </I18nLoader>\n    );\n  }\n\n  return (\n    <I18nLoader language={language}>\n      <Switch>\n        <Route path={`${match.path}/`} component={Home} exact />\n        <Route component={NotFound} />\n      </Switch>\n    </I18nLoader>\n  );\n};\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Switch>\n          <Route path=\"/\" component={RootRedirect} exact />\n          <Route path=\"/:language\" component={I18nRoutes} />\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport { hydrate, render } from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst rootElement = document.getElementById(\"root\");\nif (rootElement.hasChildNodes()) {\n  hydrate(<App />, rootElement);\n} else {\n  render(<App />, rootElement);\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}